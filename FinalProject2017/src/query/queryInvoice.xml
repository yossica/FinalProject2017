<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="invoice">
	<select id="getAllWithFilter" parameterClass="java.util.Map" resultClass="invoice.InvoiceBean">		
		select
			transaction_invoice_id as transactionInvoiceHeaderId,
            invoice_number as invoiceNumber,
            tih.client_id as clientId,
            mc.name as clientName,
            period_month as periodMonth,
            case period_month
                when 1 then 'January'
                when 2 then 'February'
                when 3 then 'March'
                when 4 then 'April'
                when 5 then 'May'
                when 6 then 'June'
                when 7 then 'July'
                when 8 then 'August'
                when 9 then 'September'
                when 10 then 'October'
                when 11 then 'November'
                else 'December' 
            end as periodMonthName,
            period_year as periodYear,
            tih.invoice_type_id as invoiceTypeId,
            mit.name as invoiceTypeName,
            to_char(invoice_date, 'MM/dd/yyyy') as invoiceDate,
            tih.status_invoice_id as statusInvoiceId,
            msi.name as statusInvoiceName
        from transaction_invoice_header tih
        join master_client mc on (tih.client_id=mc.client_id)
        join master_invoice_type mit on (tih.invoice_type_id=mit.invoice_type_id)
        join master_status_invoice msi on (tih.status_invoice_id=msi.status_invoice_id)
        where 1=1
        <dynamic prepend="AND">
			<isNotNull property="yearTo">
				<isNotEmpty property="yearTo">
					to_date(period_month||'/'||period_year,'MM/YYYY')
					between to_date(#monthFrom#||'/'||#yearFrom#,'MM/YYYY') 
					and last_day(to_date(#monthTo#||'/'||#yearTo#,'MM/YYYY'))
				</isNotEmpty>
			</isNotNull>
		</dynamic>
        <dynamic prepend="AND">
			<isNotNull property="client">
				<isNotEmpty property="client">
					tih.client_id = #client#
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		<dynamic prepend="AND">
			<isNotNull property="status">
				<isNotEmpty property="status">
					tih.status_invoice_id = #status#
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		order by 2
	</select>
	
	<select id="getHeaderById" resultClass="invoice.InvoiceBean" parameterClass="java.lang.Integer">		
		select
		    i.transaction_invoice_id as transactionInvoiceHeaderId,
		    i.invoice_type_id as invoiceTypeId,
		    i.client_id as clientId,
		    c.name as clientName,
		    t.name as invoiceTypeName,
		    i.period_month as periodMonth,
		    i.period_year as periodYear,
		    i.is_gross as isGross,
		    i.invoice_number as invoiceNumber,
		    to_char(i.invoice_date,'MM/DD/YYYY') as invoiceDate,
		    i.total_net as totalNet,
		    i.total_ppn as totalPpn,
		    i.total_gross as totalGross,
		    i.notes as notes,
		    i.created_date as createdDate,
		    i.created_by as createdBy,
		    i.changed_date as changedDate,
		    i.changed_by as changedBy
		from 
		    transaction_invoice_header i,
		    master_invoice_type t,
		    master_client c
		where 
		    i.transaction_invoice_id= #transactionInvoiceHeaderId# and
		    i.client_id = c.client_id and
		    i.invoice_type_id = t.invoice_type_id
	</select>
	
	<select id="getHeaderIdByNumber" resultClass="invoice.InvoiceBean" parameterClass="java.lang.String">
		select
            h.transaction_invoice_id as transactionInvoiceHeaderId,
            t.name as invoiceTypeName
        from transaction_invoice_header h join master_invoice_type t on h.invoice_type_id = t.invoice_type_id
        where invoice_number=#invoiceNumber#
	</select>
	
	<select id="checkTrainingPaymentTypeByHeaderId" resultClass="java.lang.String" parameterClass="java.lang.Integer">
		select           
            description
        from transaction_invoice_detail
        where transaction_invoice_id=#invoiceNumber#
        and (description like 'Training%DP' or description like 'Training%Settlement')
	</select>
	
	
	<select id="getDetailById" resultClass="invoice.InvoiceDetailBean" parameterClass="java.lang.Integer">		
        select 
            rownum as numb,
            Description||' '||e.name||' '||nvl2(i.man_days,i.man_days||' days work',i.man_days) as description,
			i.TRANSACTION_INVOICE_DETAIL_ID as transactionInvoiceDetailId,
			i.TRANSACTION_INVOICE_ID as transactionInvoiceHeaderId,
			i.FEE as fee,
			i.EMPLOYEE_ID as employeeId,
			i.MAN_DAYS as manDays,
			i.NOTES as notes,
			i.CREATED_BY as createdBy,
			to_char(i.CREATED_DATE,'MM/dd/yyyy') as createdDate,
			i.CHANGED_BY as changedBy,
			to_char(i.CHANGED_DATE,'MM/dd/yyyy') as changedDate,
			i.WORK_DAYS as workDays,
			i.UNIT_PRICE as unitPrice,
			i.TOTAL_FEE as totalFee,
			e.name as employeeName
		from transaction_invoice_detail i, master_employee e
		where I.EMPLOYEE_ID = e.employee_id
		and transaction_invoice_id=#transactionInvoiceHeaderId#
        
        
	</select>
	
	<select id="getCreatedRemainderList" resultClass="invoice.InvoiceBean">
		select
            c.name as clientName,
            i.name as invoiceTypeName,
            t.invoice_number as invoiceNumber,
            to_char(t.invoice_date,'MM/dd/yyyy') as invoiceDate
        from
            transaction_invoice_header t,master_client c,master_invoice_type i
        where
            t.client_id = c.client_id and
            t.status_invoice_id=1 and
            t.invoice_type_id = i.invoice_type_id
	</select>
	
	<select id="getSentOutsourceRemainderList" resultClass="invoice.InvoiceBean">
		select
            c.name as clientName,
            i.name as invoiceTypeName,
            t.invoice_number as invoiceNumber,
            to_char(t.invoice_date,'MM/dd/yyyy') as invoiceDate
        from
            transaction_invoice_header t,master_client c,master_invoice_type i
        where
            t.client_id = c.client_id and
            t.status_invoice_id=2 and
            t.invoice_type_id = i.invoice_type_id
	</select>
	
	<select id="checkInvoice" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select
		    count(1)
		from
		    transaction_invoice_header
		where
		    period_month = #periodMonth#
		    and period_year = #periodYear#
		    and client_id = #clientId#
		    and invoice_type_id = 1
		    and status_invoice_id != 4
	</select>
	
	<select id="getMaxIdHeader" resultClass="java.lang.Integer">
		select max(transaction_invoice_id)
		from transaction_invoice_header
    </select>
    
    <select id="getMaxIdDetail" resultClass="java.lang.Integer">
		select max(transaction_invoice_detail_id)
		from transaction_invoice_detail
    </select>
    
    <select id="getMaxInvoiceNumber" resultClass="java.lang.String">
    	select invoice_number
    	from transaction_invoice_header
    	where transaction_invoice_id = 
    	(select max(transaction_invoice_id)
    	from transaction_invoice_header)
    </select>
    
    <select id="getLatestInvoiceDate" resultClass="java.lang.String">
    	select invoice_date
    	from transaction_invoice_header
    	where transaction_invoice_id = 
    	(select max(transaction_invoice_id)
    	from transaction_invoice_header)
    </select>
    
    <insert id="insertHeader" parameterClass="invoice.InvoiceBean">
    	insert into transaction_invoice_header
    	(TRANSACTION_INVOICE_ID,INVOICE_NUMBER,INVOICE_DATE,PERIOD_MONTH,PERIOD_YEAR,
    	STATUS_INVOICE_ID,INVOICE_TYPE_ID,CLIENT_ID,TOTAL_NET,PPN_PERCENTAGE,IS_GROSS,TOTAL_GROSS,
    	NOTES,CREATED_BY,CREATED_DATE,CHANGED_BY,CHANGED_DATE,TOTAL_PPN)
    	values (#transactionInvoiceHeaderId#, #invoiceNumber#, to_date(#invoiceDate#, 'yyyy-mm-dd'), #periodMonth#, #periodYear#, 
    	#statusInvoiceId#, #invoiceTypeId#, #clientId#, #totalNet#, #ppnPercentage#, #isGross#, #totalGross#,
    	#notes#, #createdBy#, sysdate, null, null, #totalPpn#)
    </insert>
    
    <insert id="insertDetail" parameterClass="invoice.InvoiceDetailBean">
    	insert into transaction_invoice_detail
    	(TRANSACTION_INVOICE_DETAIL_ID,TRANSACTION_INVOICE_ID,DESCRIPTION,FEE,EMPLOYEE_ID,
    	MAN_DAYS,NOTES,CREATED_BY,CREATED_DATE,CHANGED_BY,CHANGED_DATE,WORK_DAYS,UNIT_PRICE,TOTAL_FEE)
    	values (#transactionInvoiceDetailId#, #transactionInvoiceHeaderId#, #description#, #fee#, #employeeId#,
    	#manDays#, #notes#, #createdBy#, sysdate, null, null, #workDays#, #unitPrice#, #totalFee#)
    </insert>
    
</sqlMap> 
