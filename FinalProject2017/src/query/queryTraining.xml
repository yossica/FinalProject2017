<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="training">
	<insert id="insertHeader" parameterClass="training.TrainingBean">
		insert into transaction_training_header 
		(transaction_training_id,client_id,dp_invoice_id,training_start_date,training_end_date,
		description,is_gross,settlement_invoice_id,created_by,created_date,changed_by,changed_date)
		values (#transactionTrainingHeaderId#,#clientId#,#dpInvoiceId#,to_date(#trainingStartDate#,'MM/dd/yyyy'),
				to_date(#trainingEndDate#,'MM/dd/yyyy'),#description#,#isGross#,#settlementInvoiceId#,#createdBy#,sysdate,
				null,null)
	</insert>
	
	<insert id="insertDetail" parameterClass="training.TrainingDetailBean">
		insert into transaction_training_detail 
		(transaction_training_detail_id,transaction_training_id,description,fee,is_settlement,
		created_by,created_date,changed_by,changed_date)
		values (#transactionTrainingDetailId#,#transactionTrainingHeaderId#,#description#,
				#fee#,#isSettlement#,#createdBy#,sysdate,
				null,null)
	</insert>
	
	<update id="updateHeader" parameterClass="training.TrainingBean">
		update transaction_training_header set
		client_id = #clientId#,
		dp_invoice_id = #dpInvoiceId#,
		training_start_date = to_date(#trainingStartDate#,'MM/dd/yyyy'),
		training_end_date = to_date(#trainingEndDate#,'MM/dd/yyyy'),
		description = #description#,
		is_gross = #isGross#,
		settlement_invoice_id = #settlementInvoiceId#,
		changed_by = #changedBy#, 
		changed_date = sysdate
		where transaction_training_id = #transactionTrainingHeaderId#
	</update>
	
	<!-- dibuat oleh aldhi -->
	<update id="updateSettlementId" parameterClass="java.lang.Integer">
		update transaction_training_header set
		settlement_invoice_id = (select max(transaction_invoice_id) from transaction_invoice_header)
		where transaction_training_id = #transactionTrainingHeaderId#
	</update>
	
	<delete id="deleteDetailByHeader" parameterClass="java.lang.Integer">
		delete from transaction_training_detail 
		where transaction_training_id = #transactionTrainingHeaderId#
	</delete>
	<!-- sampai sini -->
	
	<update id="resetSettlementInvoiceIdByHeaderId" parameterClass="java.util.Map">
		update transaction_training_header set
		settlement_invoice_id = 0,
		changed_by = #changedBy#, 
		changed_date = sysdate
		where settlement_invoice_id = #settlementInvoiceId#
	</update>
	
	<update id="updateDetail" parameterClass="training.TrainingDetailBean">
		update transaction_training_detail set
		description = #description#,
		fee = #fee#,
		is_settlement = #isSettlement#,
		changed_by = #changedBy#, 
		changed_date = sysdate
		where transaction_training_detail_id = #transactionTrainingDetailId#
	</update>
	
	<delete id="deleteHeader" parameterClass="java.lang.Integer">
		delete from transaction_training_header
			where transaction_training_id = #transactionTrainingHeaderId#
	</delete>
	
	<delete id="deleteDetail" parameterClass="java.lang.Integer">
		delete from transaction_training_detail
			where transaction_training_detail_id = #transactionTrainingDetailId#
	</delete>
	
	<delete id="deleteDetailByIdHeader" parameterClass="java.lang.Integer">
		delete from transaction_training_detail
			where transaction_training_id = #transactionTrainingHeaderId#
	</delete>
	
	<select id="getById" resultClass="training.TrainingBean"
						 parameterClass="java.lang.Integer">
		 select t.transaction_training_id as transactionTrainingHeaderId,
		 		t.client_id as clientId,
		 		c.name as clientName,
		 		t.dp_invoice_id as dpInvoiceId,
		 		t.training_start_date as trainingStartDate,
		 		t.training_end_date as trainingEndDate,
				t.description as description,
				t.is_gross as isGross,
				t.settlement_invoice_id as settlementInvoiceId,
				t.created_by as createdBy,
				to_char(t.created_date, 'MM/dd/yyyy') as createdDate,
				t.changed_by as changedBy,
				to_char(t.changed_date, 'MM/dd/yyyy') as changedDate
		from transaction_training_header t, master_client c
		where t.client_id = c.client_id
			and t.transaction_training_id = #transactionTrainingHeaderId#
	</select>
	
	<select id="getHeaderIdByDpId" resultClass="java.lang.Integer"
						 parameterClass="java.lang.Integer">
		 select transaction_training_id as transactionTrainingHeaderId
		from transaction_training_header
		where dp_invoice_id = #dpInvoiceId#
	</select>
	
	<select id="getTrainingByInvoiceSettlementId" resultClass="training.TrainingBean"
						 parameterClass="java.lang.Integer">
		select transaction_training_id as transactionTrainingHeaderId,
			description as description
		from transaction_training_header
		where settlement_invoice_id = #settlementInvoiceId#
	</select>
	
	<select id="getDetailById" resultClass="training.TrainingDetailBean"
						 			parameterClass="java.lang.Integer">
		select transaction_training_detail_id as transactionTrainingDetailId,
				transaction_training_id as transactionTrainingHeaderId,
				description as description,
				fee as fee,
				is_settlement as isSettlement,
				created_by as createdBy,
				to_char(created_date, 'MM/dd/yyyy') as createdDate,
				changed_by as changedBy,
				to_char(changed_date, 'MM/dd/yyyy') as changedDate
		from transaction_training_detail
		where transaction_training_detail_id = #transactionTrainingDetailId#
	</select>
	
	<select id="getDetailByIdHeader" resultClass="training.TrainingDetailBean"
						 			parameterClass="java.lang.Integer">
		select transaction_training_detail_id as transactionTrainingDetailId,
				transaction_training_id as transactionTrainingHeaderId,
				description as description,
				fee as fee,
				is_settlement as isSettlement,
				created_by as createdBy,
				to_char(created_date, 'MM/dd/yyyy') as createdDate,
				changed_by as changedBy,
				to_char(changed_date, 'MM/dd/yyyy') as changedDate
		from transaction_training_detail
		where transaction_training_id = #transactionTrainingHeaderId#
		order by 1
	</select>
	
	<select id="getAllWithFilter" parameterClass="java.util.Map">
		<!-- hanya ngambil headernya aja -->
		select
			t.transaction_training_id as transactionTrainingHeaderId,
	 		t.client_id as clientId,
	 		c.name as clientName,
	 		t.dp_invoice_id as dpInvoiceId,
	 		t.training_start_date as trainingStartDate,
	 		t.training_end_date as trainingEndDate,
			t.description as description,
			t.is_gross as isGross,
			t.settlement_invoice_id as settlementInvoiceId,
			t.created_by as createdBy,
			to_char(t.created_date, 'MM/dd/yyyy') as createdDate,
			t.changed_by as changedBy,
			to_char(t.changed_date, 'MM/dd/yyyy') as changedDate
		from transaction_training_header t, master_client c
		where t.client_id = c.client_id
			<dynamic prepend="AND">
				<isNotNull property="clientId">
					<isNotEmpty property="clientId">
						client_id = #clientId#
					</isNotEmpty>
				</isNotNull>
			</dynamic>
	</select>
	
    <select id="getMaxHeaderId" resultClass="java.lang.Integer">
		select max(transaction_training_id)
		from transaction_training_header
    </select>	
    
    <select id="getMaxDetailId" resultClass="java.lang.Integer">
		select max(transaction_training_detail_id)
		from transaction_training_detail
    </select>
    
	<select id="getListedTrainingRemainderList" resultClass="training.TrainingBean">
		select
		    c.name as clientName,
		    t.description as description
		from
		    transaction_training_header t,master_client c
		where
		    c.client_id = t.client_id and
		    t.settlement_invoice_id = 0 and
		    t.training_end_date &lt;= sysdate
	</select>	
	<select id="getOngoingTrainingClient" resultClass="client.ClientBean">
		select distinct
		    c.client_id as clientId,
		    c.name as name
		from
		    transaction_training_header h
		    join master_client c on h.client_id = c.client_id
		where
		    h.settlement_invoice_id = 0
		    and not exists (
		        select transaction_invoice_id
		        from transaction_invoice_header i
		        where i.transaction_invoice_id = h.dp_invoice_id
		            and i.status_invoice_id != (select status_invoice_id from master_status_invoice where name = 'Paid')
		    )
		order by c.client_id
	</select>
	<select id="getOngoingTrainingByClient" parameterClass="java.lang.Integer" resultClass="training.TrainingBean">
		select 
		    transaction_training_id as transactionTrainingHeaderId,
		    description as description
		from transaction_training_header h
		where settlement_invoice_id = 0
		    and client_id = #value#
		    and not exists (
		        select transaction_invoice_id
		        from transaction_invoice_header i
		        where i.transaction_invoice_id = h.dp_invoice_id
		            and i.status_invoice_id != (select status_invoice_id from master_status_invoice where name = 'Paid')
		    )
		order by 1
	</select>
	<select id="getTrainingByInvoiceDpId" resultClass="training.TrainingBean"
						 parameterClass="java.lang.Integer">
		 select t.transaction_training_id as transactionTrainingHeaderId,
		 		t.client_id as clientId,
		 		c.name as clientName,
		 		t.dp_invoice_id as dpInvoiceId,
		 		to_char(t.training_start_date, 'MM/dd/yyyy') as trainingStartDate,
		 		to_char(t.training_end_date, 'MM/dd/yyyy') as trainingEndDate,
				t.description as description,
				t.is_gross as isGross,
				t.settlement_invoice_id as settlementInvoiceId,
				t.created_by as createdBy,
				to_char(t.created_date, 'MM/dd/yyyy') as createdDate,
				t.changed_by as changedBy,
				to_char(t.changed_date, 'MM/dd/yyyy') as changedDate
		from transaction_training_header t, master_client c
		where t.client_id = c.client_id
			and t.dp_invoice_id = #dp_invoice_id#
	</select>
</sqlMap> 
