<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="pettyCash">

	<select id="getAllWithFilter" parameterClass="java.util.Map" resultClass="cashInBank.CashInBankBean">
		select
			transaction_petty_cash_id as transactionPettyCashId,
			t.cash_flow_category_id as cashFlowCategoryId,
			m.name as cashFlowCategoryName,
			amount,
			balance,
			description,
			to_char(transaction_date, 'MM/dd/yyyy') as transactionDate,
			t.is_debit as isDebit,
			t.created_by as createdBy,
			to_char(t.created_date, 'MM/dd/yyyy') as createdDate
		from transaction_petty_cash t
			join master_cash_flow_category m on t.cash_flow_category_id = m.cash_flow_category_id
		where
			1=1
			<dynamic prepend="AND">
				<isNotNull property="startDate">
					<isNotEmpty property="startDate">
						transaction_date between to_date(#startDate#,'MM/dd/yyyy') and to_date(#endDate#,'MM/dd/yyyy')
					</isNotEmpty>
				</isNotNull>
			</dynamic>
			<dynamic prepend="AND">
				<isNotNull property="category">
					<isNotEmpty property="category">
						t.cash_flow_category_id = #category#
					</isNotEmpty>
				</isNotNull>
			</dynamic>
		order by t.created_date
	</select>
	
	<select id="getCurrentBalance" resultClass="java.lang.Double">
		select balance
        from transaction_petty_cash b,
        (select max(transaction_petty_cash_id) as max_id from transaction_petty_cash) c
        where b.transaction_petty_cash_id = c.max_id
	</select>

	<select id="getMaxId" resultClass="java.lang.Integer">
		select max(transaction_petty_cash_id)
		from transaction_petty_cash
    </select>

	<insert id="insert" parameterClass="pettyCash.PettyCashBean">			
		<isEqual property="isDebit" compareValue="1">
			insert all
			    into  transaction_petty_cash (transaction_petty_cash_id, cash_flow_category_id,
					amount, balance, description, transaction_date, 
					is_debit, created_by, created_date)
		        values (#transactionPettyCashId#,#cashFlowCategoryId#,
					#amount#,balance-#amount#,#description#,to_date(#transactionDate#,'MM/dd/yyyy'),
					#isDebit#,#createdBy#, sysdate)
		</isEqual>
		<isEqual property="isDebit" compareValue="0">
			insert all
			    into  transaction_petty_cash (transaction_petty_cash_id, cash_flow_category_id,
					amount, balance, description, transaction_date, 
					is_debit, created_by, created_date)
		        values (#transactionPettyCashId#,#cashFlowCategoryId#,
					#amount#,balance+#amount#,#description#,to_date(#transactionDate#,'MM/dd/yyyy'),
					#isDebit#,#createdBy#, sysdate)
		</isEqual>
		<isEqual property="transactionPettyCashId" compareValue="1">
			select 0 as balance
			from dual
		</isEqual>
		<isNotEqual property="transactionPettyCashId" compareValue="1">
			select balance
	        from transaction_petty_cash b,
	        (select max(transaction_petty_cash_id) as max_id from transaction_petty_cash) c
	        where b.transaction_petty_cash_id = c.max_id	
		</isNotEqual>
	</insert>
	
</sqlMap> 
